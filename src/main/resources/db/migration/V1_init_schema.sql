CREATE TABLE IF NOT EXISTS category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255)
    );

CREATE TABLE IF NOT EXISTS sub_category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255)
    );

CREATE TABLE IF NOT EXISTS product (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    description VARCHAR(80),
    long_description VARCHAR(500),
    price NUMERIC(38,2),
    quantity INT NOT NULL CHECK (quantity >= 0),
    is_available BOOLEAN NOT NULL,
    created_at TIMESTAMP,
    modified_at TIMESTAMP,
    category_id BIGINT,
    sub_category_id BIGINT,
    CONSTRAINT fk_product_category FOREIGN KEY (category_id) REFERENCES category(id),
    CONSTRAINT fk_product_sub_category FOREIGN KEY (sub_category_id) REFERENCES sub_category(id)
    );

CREATE TABLE IF NOT EXISTS image (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255),
    url VARCHAR(255),
    is_principal BOOLEAN,
    product_id BIGINT,
    CONSTRAINT fk_image_product FOREIGN KEY (product_id) REFERENCES product(id)
    );

CREATE TABLE IF NOT EXISTS user_table (
    id UUID PRIMARY KEY,
    name VARCHAR(255),
    email VARCHAR(255) UNIQUE,
    password VARCHAR(255),
    role VARCHAR(255) CHECK (role IN ('USER', 'ADMIN')),
    enabled BOOLEAN NOT NULL,
    account_locked BOOLEAN NOT NULL,
    created_at TIMESTAMP,
    modified_at TIMESTAMP
    );

CREATE TABLE IF NOT EXISTS token (
    id INTEGER PRIMARY KEY,
    token VARCHAR(255) UNIQUE,
    created_at TIMESTAMP,
    expires_at TIMESTAMP,
    validated_at TIMESTAMP,
    user_id UUID NOT NULL,
    CONSTRAINT fk_token_user FOREIGN KEY (user_id) REFERENCES user_table(id)
    );

CREATE SEQUENCE IF NOT EXISTS token_seq
    START WITH 1
    INCREMENT BY 50
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS orders (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tracking_number VARCHAR(255),
    total_amount NUMERIC(38,2),
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    user_id UUID,
    payment_method VARCHAR(255) CHECK (payment_method IN ('CREDIT_CARD', 'DEBIT_CARD', 'PAYPAL', 'CASH_ON_DELIVERY', 'STRIPE')),
    status VARCHAR(255) CHECK (status IN ('PENDING', 'CONFIRMED', 'SHIPPED', 'DELIVERED', 'CANCELLED', 'RETURNED', 'FAILED')),
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    email VARCHAR(255),
    phone VARCHAR(255),
    street VARCHAR(255),
    city VARCHAR(255),
    state VARCHAR(255),
    zip_code VARCHAR(255),
    country VARCHAR(255),
    CONSTRAINT fk_orders_user FOREIGN KEY (user_id) REFERENCES user_table(id)
    );

CREATE TABLE IF NOT EXISTS order_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id BIGINT,
    product_id BIGINT,
    quantity INT NOT NULL,
    price_at_purchase NUMERIC(38,2),
    CONSTRAINT fk_order_item_order FOREIGN KEY (order_id) REFERENCES orders(id),
    CONSTRAINT fk_order_item_product FOREIGN KEY (product_id) REFERENCES product(id)
    );
